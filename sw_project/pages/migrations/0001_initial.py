# Generated by Django 4.2.15 on 2025-01-22 15:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pages.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=249, verbose_name='Название элемента')),
                ('image', models.ImageField(default=None, null=True, upload_to='elements/images/', verbose_name='Изображение элемента')),
                ('image_webp', models.ImageField(default=None, null=True, upload_to='elements/images/webp/', verbose_name='Изображение элемента')),
                ('description', models.TextField(verbose_name='Описание элемента')),
                ('char_limit', models.PositiveIntegerField(default=100, verbose_name='Количество символов до сокращения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Отображать на странице')),
                ('action_link', models.TextField(blank=True, max_length=256, verbose_name='Ссылка в конце карточки')),
                ('priority', models.IntegerField(default=0, verbose_name='Приоритетность')),
            ],
            options={
                'verbose_name': 'Элемент',
                'verbose_name_plural': 'Элементы',
                'ordering': ['id'],
            },
            bases=(pages.mixins.ImageTagMixin, pages.mixins.ImageSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Grocery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=249, verbose_name='Название продукта')),
                ('certificate', models.ImageField(blank=True, null=True, upload_to='certificates/', verbose_name='Cертификат продукта')),
                ('image', models.ImageField(default=None, null=True, upload_to='groceries/images/', verbose_name='Изображение категории продукта')),
                ('image_webp', models.ImageField(default=None, null=True, upload_to='groceries/images/webp/', verbose_name='Изображение категории продукта')),
                ('main_description', models.TextField(verbose_name='Описание на главной странице')),
                ('description', models.TextField(verbose_name='Описание на странице продуктов')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='Слаг продукта')),
                ('priority', models.IntegerField(default=0, verbose_name='Приоритетность')),
            ],
            options={
                'verbose_name': 'Категория продукта',
                'verbose_name_plural': 'Категории продуктов',
                'ordering': ['priority', 'name'],
            },
            bases=(pages.mixins.ImageTagMixin, pages.mixins.ImageSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GroceryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default=None, null=True, upload_to='grocery_images/', verbose_name='Изображение продукта')),
                ('image_webp', models.ImageField(default=None, null=True, upload_to='grocery_images/webp/', verbose_name='Изображение продукта')),
                ('description', models.TextField(default='No description', verbose_name='Описание изображения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Отображать на странице')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Введите цену в рублях. Пример: 1234.56', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена на продукт (₽)')),
                ('grocery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='pages.grocery', verbose_name='Категория продукта')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ['grocery'],
            },
            bases=(pages.mixins.ImageTagMixin, pages.mixins.ImageSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Полное название единицы измерения')),
                ('abbreviation', models.CharField(max_length=5, verbose_name='Сокращение единицы измерения')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
                'ordering': ['abbreviation'],
            },
        ),
        migrations.CreateModel(
            name='GroceryValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(verbose_name='Объём тары продукта')),
                ('grocery_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volumes', to='pages.groceryimage', verbose_name='Продукт')),
                ('measurement_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pages.measurementunit', verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Объём тары продукта',
                'verbose_name_plural': 'Объём тары продуктов',
                'ordering': ['grocery_image'],
            },
        ),
    ]
